{
  "version": 3,
  "sources": ["../../zone.js/fesm2015/zone.js", "dep:zone__js"],
  "sourcesContent": ["'use strict';\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n", "export default require(\"../node_modules/zone.js/fesm2015/zone.js\");"],
  "mappings": "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",
  "names": ["global", "Zone", "self", "delegate", "prop", "ObjectGetOwnPropertyDescriptor", "ObjectDefineProperty", "value", "_global", "event", "patchOptions", "returnTarget", "internalWindow", "window", "isBrowser", "isMix", "zoneSymbolEventNames", "TRUE_STR", "FALSE_STR", "ZONE_SYMBOL_PREFIX", "name", "loadTasks"]
}
